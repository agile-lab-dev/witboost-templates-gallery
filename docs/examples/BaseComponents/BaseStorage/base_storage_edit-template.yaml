# it is important to use this apiVersion
apiVersion: witboost.com/v1
kind: EditTemplate
metadata:
  name: edit-storage-base-full-experience.1
  title: Storage Area Edit Template
  description: Edit a Storage Area of a Data Product
  tags:
    - edit
    - storage
spec:
  owner: agilelab
  useCaseTemplateId:
    - urn:dmb:utm:storage-base-full-experience-template:0.0.0
  parameters:
    - title: Update Storage Area
      description: |
        This wizard will allow you to edit the metadata for a previously created Storage Area.
        
        Most metadata is editable but some (like the name, domain, data product etc) are not; their fields will be read-only.
        
        Some of the files in the component's repository cannot be updated by this wizard, namely:
        - **Documentation**: `README.md`, `docs/index.md`, etc
        - **CI/CD**: `.gitlab-ci-yaml`
        You need to take care of updating these yourself, as given their nature it's hard to do automatically and they are often edited manually after the component's creation.

    - title: Update component metadata
      description: update basic information for this component.
      required:
        - description
      properties:
        name:
          title: Name
          type: string
          description: Not editable. The name of the component.
          ui:disabled: true
        description:
          title: Description
          type: string
          description: Required. Help others understand what this component is for. What data will it contain?
        domain:
          title: Domain
          type: string
          description: Not editable. Domain of the Data Product this component belongs to
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - Domain
          ui:disabled: true
        dataproduct:
          title: Data Product
          type: string
          description: Not editable. Data Product this component belongs to
          ui:field: EntityPicker
          ui:filter:
            - fieldName: domain
              entityPath: spec.domain
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - System
          ui:disabled: true
        identifier:
          title: Identifier
          type: string
          description: Autogenerated from the information above. A unique identifier for the component. It will not be editable after creation and is a string composed of [a-zA-Z] separated by any of [-_].
          ui:field: ComponentIdentifierPicker
          ui:options:
            allowArbitraryValues: false
        developmentGroup:
          title: Development Group
          type: string
          description: Automatically selected from the Data Product metadata. Data Product development group.
          ui:field: EntitySelectionPicker
          ui:fieldName: dataproduct
          ui:property: spec.owner
          ui:options:
            allowArbitraryValues: false
        dependsOn:
          title: Dependencies
          type: array
          description: |
            A component could depend on other components in the same Data Product. This information will be used to deploy the components in such an order that their dependencies already exist.

            **Warning**: be careful not to select this component as its own dependency, otherwise it will become undeployable until you edit it again and remove that circular dependency.
          default: []
          items:
            type: string
            ui:field: EntityRelationsPicker
            ui:fieldName: dataproduct
            relation: hasPart
        tags:
          title: Tags
          type: array
          description: Tags for the component
          default: []
          items:
            type: string


    - title: Update Storage Area deployment information
      description: Update deployment information for this component.
      required:
        - tableName
      properties:
        database:
          title: Database name
          type: string
          description: Name of the database. If not provided, a default value (the Domain name, in uppercase) will be assigned during the creation.
          ui:field: RegexPicker
          validation:
            errorMessage: The database name should contain only alphanumeric characters or "_"
            regularExpression: ^[a-zA-Z0-9_]*$
        schema:
          title: Schema name
          type: string
          description: Name of the schema inside the Snowflake database specified above. If not provided, the default value (the Data Product name ands its major version, separated by _ and in uppercase) will be assigned during the creation.
          ui:field: RegexPicker
          validation:
            errorMessage: The schema name should contain only alphanumeric characters or "_"
            regularExpression: ^[a-zA-Z0-9_]*$
        tableName:
          title: Table Name
          type: string
          description: Name of the table inside the schema specified above.
          ui:field: RegexPicker
          validation:
            errorMessage: The table name should contain only alphanumeric characters or "_"
            regularExpression: ^[a-zA-Z0-9_]+$


    - title: Update Table Schema
      description: Update the definition of the columns of the table.
      properties:
        schemaDefinition:
          title: Update your table schema
          type: object
          properties:
            schemaColumns:
              title: Column Definitions
              type: array
              ui:ArrayFieldTemplate: ArrayTableTemplate
              items:
                type: object
                ui:ObjectFieldTemplate: TableRowTemplate
                required:
                  - name
                  - dataType
                properties:
                  name:
                    type: string
                    title: Name
                  description:
                    type: string
                    title: Description
                  dataType:
                    type: string
                    default: INT
                    title: Data Type
                    enum:
                      - TINYINT
                      - SMALLINT
                      - INT
                      - BIGINT
                      - DOUBLE
                      - DECIMAL
                      - TIMESTAMP
                      - DATE
                      - STRING
                      - TEXT
                      - CHAR
                      - VARCHAR
                      - BOOLEAN
                      - ARRAY
                  constraint:
                    type: string
                    title: Constraint
                    default: (no constraint)
                    enum:
                      - PRIMARY_KEY
                      - NOT_NULL
                      - UNIQUE
                      - (no constraint)
                allOf:
                  - if:
                      properties:
                        dataType:
                          const: ARRAY
                    then:
                      required:
                        - arrayDataType
                      properties:
                        arrayDataType:
                          title: Array Data Type
                          description: Data type of the array elements
                          type: string
                          default: INT
                          enum:
                            - TINYINT
                            - SMALLINT
                            - INT
                            - BIGINT
                            - DOUBLE
                            - DECIMAL
                            - TIMESTAMP
                            - DATE
                            - STRING
                            - TEXT
                            - CHAR
                            - VARCHAR
                            - BOOLEAN
                            - ARRAY
                      allOf:
                        - if:
                            properties:
                              arrayDataType:
                                oneOf:
                                  - const: TEXT
                                  - const: VARCHAR
                                  - const: CHAR
                          then:
                            properties:
                              dataLength:
                                title: Column Length
                                type: integer
                                description: Maximum length of column row
                                default: 65535
                            required:
                              - dataLength
                        - if:
                            properties:
                              arrayDataType:
                                oneOf:
                                  - const: DECIMAL
                          then:
                            properties:
                              precision:
                                title: Precision
                                type: integer
                                description: Precision of the numeric data type
                                minimum: 1
                                maximum: 38
                                default: 38
                              scale:
                                title: Scale
                                type: integer
                                description: Scale of the numeric data type; cannot be greater than precision minus 1
                                minimum: 0
                                maximum: 37
                                default: 0
                            required:
                              - precision
                              - scale
                  - if:
                      properties:
                        dataType:
                          oneOf:
                            - const: TEXT
                            - const: VARCHAR
                            - const: CHAR
                    then:
                      properties:
                        dataLength:
                          title: Column Length
                          type: integer
                          description: Maximum length of column row
                          default: 65535
                      required:
                        - dataLength
                  - if:
                      properties:
                        dataType:
                          oneOf:
                            - const: DECIMAL
                    then:
                      properties:
                        precision:
                          title: Precision
                          type: integer
                          description: Precision of the numeric data type
                          minimum: 1
                          maximum: 38
                          default: 38
                        scale:
                          title: Scale
                          type: integer
                          description: Scale of the numeric data type; cannot be greater than precision minus 1
                          minimum: 0
                          maximum: 37
                          default: 0
                      required:
                        - precision
                        - scale
                  - if: true
                    then:
                      properties:
                        businessTerms:
                          title: Business Terms
                          type: array
                          description: Multiple selection for fixed tags
                          uniqueItems: true
                          ui:style:
                            minWidth: 400
                          items:
                            type: string
                            enum:
                              - Raw
                              - Derived
                              - Metadata
                              - Identifier
                              - Dimension
                              - Fact


  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./edit-skeleton
        targetPath: .
        values:
          name: '${{ parameters.name }}'
          description: '${{ parameters.description }}'
          domain: '${{ parameters.domain }}'
          dataproduct: '${{ parameters.dataproduct }}'
          identifier: '${{ parameters.identifier }}'
          developmentGroup: '${{ parameters.developmentGroup }}'
          dependsOn: '${{ parameters.dependsOn }}'
          tags: '${{ parameters.tags }}'
          database: '${{ parameters.database }}'
          schema: '${{ parameters.schema }}'
          tableName: '${{ parameters.tableName }}'
          schemaColumns: '${{ parameters.schemaDefinition.schemaColumns }}'
