{% set domainNameNormalized = values.domain | replace(r/domain:| |-/, "") %}
{% set dataProductNameNormalized = values.dataproduct.split(".")[1] | replace(r/ |-/g, "") %}
{% set dataProductMajorVersion = values.identifier.split(".")[2] %}

apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: ${{ values.identifier }}
  description: |
      "${{ values.description }}"
  annotations:
    gitlab.com/project-slug: ${{ values.owner + "/" + values.repo }}
    backstage.io/techdocs-ref: dir:.
  tags:
    - storage
spec:
  type: storage
  lifecycle: experimental
  owner: ${{ values.developmentGroup }}
  system: ${{ values.dataproduct }}
  domain: ${{ values.domain }}
  mesh:
    name: ${{ values.name }}
    fullyQualifiedName: ${{ values.fullyQualifiedName }}
    description: ${{ values.description | dump }}
    kind: storage
    version: ${{ dataProductMajorVersion + ".0.0" }}
    infrastructureTemplateId: ${{ values.infrastructureTemplateId }}
    useCaseTemplateId: ${{ values.useCaseTemplateId }}
    dependsOn: {% if values.dependsOn | length > 0 %}{% for i in values.dependsOn %}
      - ${{ i }}{% endfor %}{% else %}[]{% endif %}
    platform: <STORAGE PLATFORM PLACEHOLDER>
    technology: <STORAGE TECHNOLOGY PLACEHOLDER>
    storageType: <STORAGE TYPE PLACEHOLDER>
    tags: {% if values.tags | length > 0 %}{% for i in values.tags %}
      - tagFQN: ${{ i }}
        source: Tag
        labelType: Manual
        state: Confirmed{% endfor %}{% else %}[]{% endif %}
    specific:
      database: {% if not values.database %}
        {% set finalDatabaseName = domainNameNormalized %}
        {% else %}
        {% set finalDatabaseName = values.database | replace(r/ |-/, "") %}
        {% endif %}
        ${{ finalDatabaseName | upper }}
      schema: {% if not values.schema %}
        {% set finalSchemaName = dataProductNameNormalized + "_" + dataProductMajorVersion %}
        {% else %}
        {% set finalSchemaName = values.schema | replace(r/ |-/, "") %}
        {% endif %}
        ${{ finalSchemaName | upper }}
      tables:
      - tableName: ${{ values.tableName | upper }}
        schema: {% if values.schemaColumns | length > 0 %}
        {%- for column in values.schemaColumns %}
          {%- set primitiveType = column.arrayDataType if column.dataType == "ARRAY" else column.dataType %}
          - name: ${{ column.name }}
            dataType: ${{ column.dataType }}
        {%- if column.description %}
            description: ${{ column.description }}
        {%- endif %}
        {%- if column.constraint and column.constraint != "(no constraint)" %}
            constraint: ${{ column.constraint }}
        {%- endif %}
        {%- if primitiveType in ["TEXT", "VARCHAR", "CHAR"] and column.dataLength %}
            dataLength: ${{ column.dataLength }}
        {%- endif %}
        {%- if primitiveType == "DECIMAL" and column.precision %}
            precision: ${{ column.precision }}
        {%- endif %}
        {%- if primitiveType == "DECIMAL" and column.scale %}
            scale: ${{ column.scale }}
        {%- endif %}
        {%- if column.dataType == "ARRAY" and column.arrayDataType %}
            arrayDataType: ${{ column.arrayDataType }}
        {%- endif %}
            tags: {% if column.businessTerms | length > 0 %}{% for i in column.businessTerms %}
              - tagFQN: ${{ i }}
                source: Glossary
                labelType: Manual
                state: Confirmed
            {% endfor %}{% else %}[]{% endif %}
        {% endfor %}{% else %}[]{% endif %}